{"version":3,"file":"281.d68f498e.js","mappings":"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","sources":["webpack://ads-ui/./node_modules/@protobufjs/aspromise/index.js","webpack://ads-ui/./node_modules/@protobufjs/base64/index.js","webpack://ads-ui/./node_modules/@protobufjs/codegen/index.js","webpack://ads-ui/./node_modules/@protobufjs/eventemitter/index.js","webpack://ads-ui/./node_modules/@protobufjs/fetch/index.js","webpack://ads-ui/./node_modules/@protobufjs/float/index.js","webpack://ads-ui/./node_modules/@protobufjs/inquire/index.js","webpack://ads-ui/./node_modules/@protobufjs/path/index.js","webpack://ads-ui/./node_modules/@protobufjs/pool/index.js","webpack://ads-ui/./node_modules/@protobufjs/utf8/index.js","webpack://ads-ui/./node_modules/protobufjs/index.js","webpack://ads-ui/./node_modules/protobufjs/src/common.js","webpack://ads-ui/./node_modules/protobufjs/src/converter.js","webpack://ads-ui/./node_modules/protobufjs/src/decoder.js","webpack://ads-ui/./node_modules/protobufjs/src/encoder.js","webpack://ads-ui/./node_modules/protobufjs/src/enum.js","webpack://ads-ui/./node_modules/protobufjs/src/field.js","webpack://ads-ui/./node_modules/protobufjs/src/index-light.js","webpack://ads-ui/./node_modules/protobufjs/src/index-minimal.js","webpack://ads-ui/./node_modules/protobufjs/src/index.js","webpack://ads-ui/./node_modules/protobufjs/src/mapfield.js","webpack://ads-ui/./node_modules/protobufjs/src/message.js","webpack://ads-ui/./node_modules/protobufjs/src/method.js","webpack://ads-ui/./node_modules/protobufjs/src/namespace.js","webpack://ads-ui/./node_modules/protobufjs/src/object.js","webpack://ads-ui/./node_modules/protobufjs/src/oneof.js","webpack://ads-ui/./node_modules/protobufjs/src/parse.js","webpack://ads-ui/./node_modules/protobufjs/src/reader.js","webpack://ads-ui/./node_modules/protobufjs/src/reader_buffer.js","webpack://ads-ui/./node_modules/protobufjs/src/root.js","webpack://ads-ui/./node_modules/protobufjs/src/roots.js","webpack://ads-ui/./node_modules/protobufjs/src/rpc.js","webpack://ads-ui/./node_modules/protobufjs/src/rpc/service.js","webpack://ads-ui/./node_modules/protobufjs/src/service.js","webpack://ads-ui/./node_modules/protobufjs/src/tokenize.js","webpack://ads-ui/./node_modules/protobufjs/src/type.js","webpack://ads-ui/./node_modules/protobufjs/src/types.js","webpack://ads-ui/./node_modules/protobufjs/src/util.js","webpack://ads-ui/./node_modules/protobufjs/src/util/longbits.js","webpack://ads-ui/./node_modules/protobufjs/src/util/minimal.js","webpack://ads-ui/./node_modules/protobufjs/src/verifier.js","webpack://ads-ui/./node_modules/protobufjs/src/wrappers.js","webpack://ads-ui/./node_modules/protobufjs/src/writer.js","webpack://ads-ui/./node_modules/protobufjs/src/writer_buffer.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    OneOf    = require(\"./oneof\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace || object instanceof OneOf))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {};\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.substr(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        if (skip(\"{\", true)) { // { a: \"foo\" b { c: \"bar\" } }\n            var result = {};\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next()))\n                    throw illegal(token, \"name\");\n\n                var value;\n                var propName = token;\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else {\n                    skip(\":\");\n                    if (peek() === \"{\")\n                        value = parseOptionValue(parent, name + \".\" + token);\n                    else {\n                        value = readValue(true);\n                        setOption(parent, name + \".\" + token, value);\n                    }\n                }\n                var prevValue = result[propName];\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n                result[propName] = value;\n                skip(\",\", true);\n            }\n            return result;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        commentType = null,\n        commentText = null,\n        commentLine = 0,\n        commentLineEmpty = false,\n        commentIsLeading = false;\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        commentType = source.charAt(start++);\n        commentLine = line;\n        commentLineEmpty = false;\n        commentIsLeading = isLeading;\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                commentLineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        commentText = lines\n            .join(\"\\n\")\n            .trim();\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        if (trailingLine === undefined) {\n            if (commentLine === line - 1 && (alternateCommentMode || commentType === \"*\" || commentLineEmpty)) {\n                ret = commentIsLeading ? commentText : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (commentLine < trailingLine) {\n                peek();\n            }\n            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === \"/\")) {\n                ret = commentIsLeading ? null : commentText;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n"],"names":["module","exports","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","verbose","console","log","scopeKeys","Object","keys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","replace","$0","$1","value","Number","floor","JSON","stringify","functionNameOverride","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","fetch","asPromise","fs","inquire","filename","options","callback","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","readyState","status","response","responseText","Uint8Array","overrideMimeType","responseType","open","send","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","moduleName","mod","eval","e","path","isAbsolute","normalize","split","absolute","prefix","shift","originPath","includePath","alreadyNormalized","alloc","size","SIZE","MAX","slab","call","utf8","len","read","write","c1","c2","common","timeType","commonRe","name","json","nested","google","protobuf","Any","fields","type_url","type","id","Duration","seconds","nanos","Timestamp","Empty","Struct","keyType","Value","oneofs","kind","oneof","nullValue","numberValue","stringValue","boolValue","structValue","listValue","NullValue","values","NULL_VALUE","ListValue","rule","DoubleValue","FloatValue","Int64Value","UInt64Value","Int32Value","UInt32Value","BoolValue","StringValue","BytesValue","FieldMask","paths","get","file","converter","Enum","util","genValuePartial_fromObject","gen","field","fieldIndex","prop","resolvedType","repeated","typeDefault","fullName","isUnsigned","genValuePartial_toObject","fromObject","mtype","fieldsArray","safeProp","map","toObject","sort","compareFieldsById","repeatedFields","mapFields","normalFields","partOf","valuesById","long","low","high","unsigned","toNumber","bytes","arrayDefault","hasKs2","_fieldsArray","indexOf","filter","group","ref","types","defaults","basic","packed","rfield","required","missing","wireType","mapKey","genTypePartial","optional","ReflectionObject","create","constructor","className","Namespace","comment","comments","TypeError","reserved","fromJSON","enm","toJSON","toJSONOptions","keepComments","Boolean","add","isString","isInteger","isReservedId","isReservedName","allow_alias","remove","Field","Type","ruleRe","extend","isObject","toLowerCase","message","defaultValue","Long","extensionField","declaringField","_packed","defineProperty","getOption","setOption","ifNotSet","resolved","parent","lookupTypeOrEnum","fromNumber","freeze","newBuffer","emptyObject","emptyArray","ctor","d","fieldId","fieldType","fieldRule","decorateType","decorateEnum","fieldName","_configure","Type_","build","load","root","Root","loadSync","encoder","decoder","verifier","OneOf","MapField","Service","Method","Message","wrappers","configure","Writer","BufferWriter","Reader","BufferReader","rpc","roots","tokenize","parse","resolvedKeyType","fieldKeyType","fieldValueType","properties","$type","writer","encodeDelimited","reader","decodeDelimited","verify","object","requestType","requestStream","responseStream","parsedOptions","resolvedRequestType","resolvedResponseType","lookupType","arrayToJSON","array","obj","_nestedArray","clearCache","namespace","addJSON","toArray","nestedArray","nestedJson","names","methods","getEnum","prev","setOptions","onAdd","onRemove","define","isArray","ptr","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","found","lookupEnum","lookupService","Service_","Enum_","defineProperties","unshift","_handleAdd","_handleRemove","setParsedOption","propName","opt","find","hasOwnProperty","newValue","setProperty","newOpt","Root_","fieldNames","addFieldsToParent","oneofName","oneOfGetter","set","oneOfSetter","keepCase","base10Re","base10NegRe","base16Re","base16NegRe","base8Re","base8NegRe","numberRe","nameRe","typeRefRe","fqTypeRefRe","pkg","imports","weakImports","syntax","token","preferTrailingComment","tn","alternateCommentMode","next","peek","skip","cmnt","head","isProto3","applyCase","camelCase","illegal","insideTryCatch","line","readString","readValue","acceptTypeRef","substring","parseInt","parseFloat","parseNumber","readRanges","target","acceptStrings","parseId","acceptNegative","parsePackage","parseImport","whichImports","parseSyntax","parseCommon","parseOption","ifBlock","valueType","parseInlineOptions","parseMapField","parseField","parseOneOf","extensions","parseType","dummy","parseEnumValue","parseEnum","service","commentText","method","parseMethod","parseService","reference","parseExtension","fnIf","fnElse","trailingLine","lcFirst","ucFirst","parseGroup","isCustom","option","substr","parseOptionValue","result","prevValue","concat","simpleValue","LongBits","indexOutOfRange","writeLength","RangeError","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","skipType","BufferReader_","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","deferred","files","SYNC","resolvePath","self","sync","finish","cb","getBundledFileName","idx","lastIndexOf","altname","process","parsed","queued","weak","setTimeout","readFileSync","isNode","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","endedByRPC","_methodsArray","inherited","methodsArray","rpcService","methodName","isReserved","m","q","s","delimRe","stringDoubleRe","stringSingleRe","setCommentRe","setCommentAltRe","setCommentSplitRe","whitespaceRe","unescapeRe","unescapeMap","unescape","str","commentType","commentLine","commentLineEmpty","commentIsLeading","stack","stringDelim","subject","setComment","isLeading","commentOffset","lines","trim","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","cursor","re","lastIndex","match","exec","repeat","curr","isDoc","isLeadingComment","expected","actual","ret","_fieldsById","_oneofsArray","_ctor","fieldsById","oneofsArray","generateConstructor","ctorProperties","setup","wrapper","originalThis","fork","ldelim","typeName","bake","o","key","safePropBackslashRe","safePropQuoteRe","toUpperCase","camelCaseRe","a","decorateRoot","enumerable","decorateEnumIndex","dst","setProp","zero","zzEncode","zeroHash","from","fromString","toLong","fromHash","hash","toHash","mask","part0","part1","part2","src","newError","CustomError","captureStackTrace","pool","g","versions","node","global","window","isFinite","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","ProtocolError","fieldMap","longs","enums","encoding","allocUnsafe","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","Op","noop","State","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength"],"sourceRoot":""}